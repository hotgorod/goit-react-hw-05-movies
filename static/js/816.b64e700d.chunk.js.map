{"version":3,"file":"static/js/816.b64e700d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetailsItem/MovieDetailsItem.module.css?a389","components/MovieDetailsItem/MovieDetailsItem.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/getTrendingMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetailsItem\":\"MovieDetailsItem_MovieDetailsItem__CICzo\"};","import React from 'react';\nimport css from './MovieDetailsItem.module.css'\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w300';\nconst MovieDetailsItem = ({ poster_path, title, overview, genres }) => {\n    \n  return (\n    <div className={css.MovieDetailsItem}>\n      <div>\n        <img src={`${baseImageUrl}${poster_path}`} alt=\"\" />\n      </div>\n      <div>\n        <h2>{title}</h2>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <ul>\n          {genres.map(genre => {\n            return <li key={genre.name}>{genre.name}</li>;\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"GoBackLink\":\"MovieDetails_GoBackLink__-bN5P\",\"ButtonBack\":\"MovieDetails_ButtonBack__B3TPC\",\"MovieDetails\":\"MovieDetails_MovieDetails__YjM5F\"};","import React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Link, NavLink, Route, Routes, useLocation, useParams } from 'react-router-dom';\n// import Cast from 'components/Cast/Cast';\n// import Reviews from 'components/Reviews/Reviews';\nimport { getMovie } from 'services/getTrendingMovies';\nimport MovieDetailsItem from 'components/MovieDetailsItem/MovieDetailsItem';\nimport css from './MovieDetails.module.css'\n\nconst Reviews = lazy(() => import('../../components/Reviews/Reviews'));\nconst Cast = lazy(() => import('../../components/Cast/Cast'));\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/')\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\n      'Something went wrong! Try again later'\n    );\n\n  useEffect(() => {\n    if (!id) return;\n    async function fetchMovieDetails() {\n      try {\n        setIsLoading(true);\n        const mDetails = await getMovie(id);\n        \n        setMovieDetails(mDetails);\n      } catch (error) {\n        setError(true);\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieDetails();\n  },[id]\n\n  )\n  return (\n    <>\n      <Link className={css.GoBackLink} to={backLinkHref.current}>\n        <button className={css.ButtonBack}>&#8678; Go back</button>\n      </Link>\n      {error && (\n        <div>\n          <p>{errorMessage}</p>\n        </div>\n      )}\n      {isLoading && (\n        <div>\n          <p>Loading...</p>\n        </div>\n      )}\n      <section>\n        {movieDetails.poster_path && (\n          <MovieDetailsItem\n            id={movieDetails.id}\n            poster_path={movieDetails.poster_path}\n            title={movieDetails.title}\n            genres={movieDetails.genres}\n            overview={movieDetails.overview}\n          />\n        )}\n        <div>\n          <h2>Additional Information</h2>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback='Loading...'>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </Suspense>\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst token =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMzBkM2RjMGNmMjJjMDliNGI5NDNmNjgwM2ZmZjczMCIsInN1YiI6IjY1MjMwN2RjYWI1ZTM0MDBmZTMyYzlmMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.b0SYdjTLCVBaZ4ILSq2IP-U1xZgGEb11pX7z428YP2w';\n\nconst authAxios = axios.create({\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await authAxios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US'\n  );\n  \n  return data;\n};\n\nexport const getMovie = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`\n  );\n\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`\n  );\n  \n  return data.cast;\n};\n\nexport const getReview = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`\n  );\n\n  return data.results;\n};\n\nexport const getMovieSearch = async movieName => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}`\n  );\n\n  return data.results;\n};\n"],"names":["poster_path","title","overview","genres","className","css","src","alt","map","genre","name","Reviews","lazy","Cast","id","useParams","location","useLocation","backLinkHref","useRef","state","from","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","errorMessage","setErrorMessage","useEffect","getMovie","mDetails","message","fetchMovieDetails","to","current","Suspense","fallback","path","element","authAxios","axios","headers","Authorization","getTrendingMovies","get","data","movieId","getCast","cast","getReview","results","getMovieSearch","movieName"],"sourceRoot":""}