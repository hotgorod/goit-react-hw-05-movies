{"version":3,"file":"static/js/692.f29b8ebf.chunk.js","mappings":"yLACA,GAAgB,SAAW,6B,SCgB3B,EAXkB,SAAC,GAA0C,IAAxCA,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACxC,OACE,eAAIC,UAAWC,EAAAA,UAAf,UACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaR,GAAhD,UACE,gBAAKI,UAAWC,EAAAA,SAAcI,IAAG,UANpB,mCAMoB,OAAoBN,GAAeO,IAAKT,OAKhF,C,6HCdD,EAA4B,6B,SCqB5B,EAlBkB,SAAC,GAAwB,IAAtBU,EAAqB,EAArBA,eAEnB,OACE,eAAIP,UAAWC,EAAf,SACGM,EAAeC,KAAI,SAAAC,GAClB,OACE,SAACC,EAAA,EAAD,CAEEb,MAAOY,EAAMZ,MACbD,GAAIa,EAAMb,GACVG,YAAaU,EAAMV,aAHdU,EAAMb,GAMhB,KAGN,ECnBD,GAAiB,E,SCwDjB,EAnDiB,WACf,OAA4Ce,EAAAA,EAAAA,UAAS,IAArD,eAAOJ,EAAP,KAAuBK,EAAvB,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCH,EAAAA,EAAAA,UACtC,yCADF,eAAOI,EAAP,KAAqBC,EAArB,KAGA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KAyBE,OAvBFC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGoCE,EAAAA,EAAAA,MAHpC,OAGUC,EAHV,OAKIT,EAAkBS,EAAkBC,SALxC,gDAQIR,GAAS,GACTE,EAAgB,KAAMO,SAT1B,yBAYIL,GAAa,GAZjB,6EADc,uBAAC,WAAD,wBAiBdM,EAGH,GAAE,KAIG,4BACGX,IACC,0BACE,uBAAIE,MAGPE,IACC,0BACE,yCAGJ,qBAASjB,UAAWC,EAAAA,kBAApB,WACE,4CACA,SAAC,EAAD,CAAWM,eAAgBA,SAIpC,C,qLCnDKkB,E,OAAYC,EAAAA,OAAa,CAC7BC,QAAS,CACPC,cAAc,UAAD,OAJf,0NAQWR,EAAiB,mCAAG,sGACRK,EAAUI,IAC/B,kEAF6B,uBACvBC,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAQ,mCAAG,WAAMC,GAAN,yFACCP,EAAUI,IAAV,6CACiBG,IAFlB,uBACdF,EADc,EACdA,KADc,kBAKfA,GALe,2CAAH,sDAQRG,EAAO,mCAAG,WAAMD,GAAN,yFACEP,EAAUI,IAAV,6CACiBG,EADjB,aADF,uBACbF,EADa,EACbA,KADa,kBAKdA,EAAKI,MALS,2CAAH,sDAQPC,EAAS,mCAAG,WAAMH,GAAN,yFACAP,EAAUI,IAAV,6CACiBG,EADjB,aADA,uBACfF,EADe,EACfA,KADe,kBAKhBA,EAAKR,SALW,2CAAH,sDAQTc,EAAc,mCAAG,WAAMC,GAAN,yFACLZ,EAAUI,IAAV,0DAC8BQ,IAFzB,uBACpBP,EADoB,EACpBA,KADoB,kBAKrBA,EAAKR,SALgB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/pages/HomePage.module.css","components/pages/HomePage.jsx","services/getTrendingMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieIMG\":\"MovieItem_MovieIMG__Fudsl\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './MovieItem.module.css'\n\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieItem = ({ id, title, location, poster_path }) => {\n  return (\n    <li className={css.MovieItem}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <img className={css.MovieIMG} src={`${baseImageUrl}${poster_path}`} alt={title} />\n        \n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieList\":\"MovieList_MovieList__92Iqv\"};","import MovieItem from 'components/MovieItem/MovieItem';\nimport React from 'react';\nimport css from './MovieList.module.css'\n\nconst MovieList = ({ trendingMovies }) => {\n  \n  return (\n    <ul className={css.MovieList}>\n      {trendingMovies.map(movie => {\n        return (\n          <MovieItem\n            key={movie.id}\n            title={movie.title}\n            id={movie.id}\n            poster_path={movie.poster_path}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {};","import MovieList from 'components/MovieList/MovieList';\nimport React, { useEffect, useState } from 'react';\nimport css from './HomePage.module.css'\nimport { getTrendingMovies } from 'services/getTrendingMovies';\n\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\n    'Something went wrong! Try again later'\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  \n  useEffect(() => {\n    async function fetchTrendingMovies() { \n      try {\n        setIsLoading(true);\n        const allTrendingMovies = await getTrendingMovies();\n        \n        setTrendingMovies(allTrendingMovies.results);\n              \n      } catch (error) { \n        setError(true);\n        setErrorMessage(error.message);\n      }\n      finally {\n        setIsLoading(false);\n      }\n\n    }\n    fetchTrendingMovies();\n\n     \n}, []);\n   \n    \n    return (\n      <main>\n        {error && (\n          <div>\n            <p>{errorMessage}</p>\n          </div>\n        )}\n        {isLoading && (\n          <div>\n            <p>Loading...</p>\n          </div>\n        )}\n        <section className={css.HomePageContainer}>\n          <h1>Trending today</h1>\n          <MovieList trendingMovies={trendingMovies} />\n        </section>\n      </main>\n    );\n}\n\nexport default HomePage;\n","import axios from 'axios';\nconst token =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMzBkM2RjMGNmMjJjMDliNGI5NDNmNjgwM2ZmZjczMCIsInN1YiI6IjY1MjMwN2RjYWI1ZTM0MDBmZTMyYzlmMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.b0SYdjTLCVBaZ4ILSq2IP-U1xZgGEb11pX7z428YP2w';\n\nconst authAxios = axios.create({\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await authAxios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US'\n  );\n  \n  return data;\n};\n\nexport const getMovie = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`\n  );\n\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`\n  );\n  \n  return data.cast;\n};\n\nexport const getReview = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`\n  );\n\n  return data.results;\n};\n\nexport const getMovieSearch = async movieName => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}`\n  );\n\n  return data.results;\n};\n"],"names":["id","title","location","poster_path","className","css","state","from","to","src","alt","trendingMovies","map","movie","MovieItem","useState","setTrendingMovies","error","setError","errorMessage","setErrorMessage","isLoading","setIsLoading","useEffect","getTrendingMovies","allTrendingMovies","results","message","fetchTrendingMovies","authAxios","axios","headers","Authorization","get","data","getMovie","movieId","getCast","cast","getReview","getMovieSearch","movieName"],"sourceRoot":""}