{"version":3,"file":"static/js/298.4eb78055.chunk.js","mappings":"6OAWA,EATmB,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC3B,OACE,2BACE,oCAAYD,MACZ,uBAAIC,MAGT,E,kBCsDD,EA1DgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCN,EAAAA,EAAAA,UACtC,yCADF,eAAOO,EAAP,KAAqBC,EAArB,KAsBA,OAlBFC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEIL,GAAa,GAFjB,UAG0BM,EAAAA,EAAAA,IAAUZ,GAHpC,OAGUa,EAHV,OAKIT,EAAUS,GALd,gDAOIL,GAAS,GACTE,EAAgB,KAAMI,SAR1B,yBAUIR,GAAa,GAVjB,6EAFc,sBACTN,GADS,mCAede,EACD,GAAE,CAACf,KAGA,gCACGO,IACC,0BACE,uBAAIE,MAGPJ,IACC,0BACE,wCAGe,IAAlBF,EAAOa,QACN,2DAEA,wBACGb,EAAOc,KAAI,SAAAnB,GACV,OACE,SAAC,EAAD,CAEEA,OAAQA,EAAOA,OACfC,QAASD,EAAOC,SAFXD,EAAOE,GAKjB,QAKV,C","sources":["components/ReviewItem/ReviewItem.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React from 'react';\n\nconst ReviewItem = ({author, content}) => {\n  return (\n    <li>\n      <p>Author: {author}</p>\n      <p>{content}</p>\n    </li>\n  );\n}\n\nexport default ReviewItem;","import ReviewItem from 'components/ReviewItem/ReviewItem';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from 'services/getTrendingMovies';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\n    'Something went wrong! Try again later'\n  );\n\nuseEffect(() => {\n  if (!id) return;\n  async function fetchReview() {\n    try {\n      setIsLoading(true);\n      const mReview = await getReview(id);\n      \n      setReview(mReview);\n    } catch (error) {\n      setError(true);\n      setErrorMessage(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  fetchReview();\n}, [id]);\n\n  return (\n    <>\n      {error && (\n        <div>\n          <p>{errorMessage}</p>\n        </div>\n      )}\n      {isLoading && (\n        <div>\n          <p>Loading...</p>\n        </div>\n      )}\n      {review.length === 0 ? (\n        <p>No review for this movie found</p>\n      ) : (\n        <ul>\n          {review.map(author => {\n            return (\n              <ReviewItem\n                key={author.id}\n                author={author.author}\n                content={author.content}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n"],"names":["author","content","id","useParams","useState","review","setReview","isLoading","setIsLoading","error","setError","errorMessage","setErrorMessage","useEffect","getReview","mReview","message","fetchReview","length","map"],"sourceRoot":""}